name: Deploy

on:
  push:
    branches:
      - master
      - main
      - feature/fixes

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        node-version: [ 12.18.2 ]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v2.1.2
        with:
          node-version: ${{ matrix.node }}

      - name: Cache node_modules 📦
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies 👨🏻‍💻
        run: npm ci

      - name: Run linter 👀
        run: npm run lint

      - name: Build 🧱
        run: npm run build:prod
  deploy:
    runs-on: ubuntu-latest

    needs:
      - test

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install NPM packages locally 🧑🏻‍💻
        run: npm ci
      - name: Build 🧱
        run: npm run build:prod
      - name: Install SSH key 🔑
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
      - name: Add Server To Known Hosts 🤷‍
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Copy package.json and package-lock.json 🖨
        run: scp -r package* ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/var/www/tpvue.arendz.nl/
      - name: Publish files 🚀
        run: scp -r .nuxt/* ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/var/www/tpvue.arendz.nl/.nuxt
      - name: Copy nuxt config file 🖨
        run: scp -r nuxt.config.js ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/var/www/tpvue.arendz.nl/nuxt.config.js
      - name: Install dependencies on production server ⏱
        run: ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} npm install --only=prod --prefix /var/www/tpvue.arendz.nl
      - name: Restart Themeparks Server 🏁
        run: ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} pm2 reload 1
